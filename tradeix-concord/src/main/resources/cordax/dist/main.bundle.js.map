{"version":3,"sources":["C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/$_gendir lazy","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/api/domain/base.service.ts","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/api/domain/nodes/node.service.ts","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/api/domain/shared/corda.ts","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/api/domain/trade-assets/trade-asset.service.ts","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/app.module.ts","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/config/config.ts","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/main/main.component.html","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/main/main.component.scss","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/main/main.component.ts","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/root/root.component.html","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/root/root.component.scss","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/root/root.component.ts","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/environments/environment.ts","C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { Injectable } from \"@angular/core\";\r\nimport { Http } from \"@angular/http\";\r\nimport { Config } from \"../../app/config/config\";\r\n\r\n@Injectable()\r\nexport class BaseService {\r\n  private readonly config: Config;\r\n  private useOrigin: boolean = true;\r\n  private apiUrl: string;\r\n\r\n  public constructor(protected readonly http: Http) {\r\n    this.config = new Config(http);\r\n    this.config.load()\r\n      .then((o: any) => {\r\n        this.useOrigin = o.useOrigin;\r\n        this.apiUrl = o.apiUrl;\r\n      });\r\n  }\r\n\r\n  protected createUrl(endpoint: string): string {\r\n    return this.useOrigin\r\n      ? `${window.location.origin}/api/${endpoint}`\r\n      : `${this.apiUrl}/${endpoint}`;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/api/domain/base.service.ts","import { Injectable } from '@angular/core';\r\nimport { BaseService } from '../base.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { CordaX500Name } from '../shared/corda';\r\nimport 'rxjs/add/operator/map'\r\n\r\n@Injectable()\r\nexport class NodeService extends BaseService {\r\n  public getLocalNode(): Observable<CordaX500Name> {\r\n    return this.http\r\n      .get(this.createUrl('nodes/local'))\r\n      .map(response => CordaX500Name.parse(response.json().localNode));\r\n  }\r\n\r\n  public getAllNodes(): Observable<CordaX500Name[]> {\r\n    return this.http\r\n      .get(this.createUrl('nodes/all'))\r\n      .map(response => (response.json().nodes as string[])\r\n        .map(name => CordaX500Name.parse(name)));\r\n  }\r\n\r\n  public getPeerNodes(): Observable<CordaX500Name[]> {\r\n    return this.http\r\n      .get(this.createUrl('nodes/peers'))\r\n      .map(response => (response.json().nodes as string[])\r\n        .map(name => CordaX500Name.parse(name)));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/api/domain/nodes/node.service.ts","export class StateRef {\r\n  public constructor(\r\n    public readonly txhash: string = null,\r\n    public readonly index: number = 0) {\r\n  }\r\n}\r\n\r\nexport class State<T> {\r\n  public constructor(public readonly data: T = null) {\r\n  }\r\n}\r\n\r\nexport class StateAndRef<T> {\r\n  public constructor(\r\n    public readonly state: State<T> = new State(),\r\n    public readonly ref: StateRef = new StateRef()) {\r\n  }\r\n}\r\n\r\nexport class UniqueIdentifier {\r\n  constructor(\r\n    public readonly externalId: string,\r\n    public readonly id: string) {\r\n  }\r\n}\r\n\r\nexport class CordaX500Name {\r\n  public static parse(value: string): CordaX500Name {\r\n    const dict: object = {};\r\n    value.split(\",\").forEach(part => {\r\n      const pair: string[] = part.split(\"=\");\r\n      dict[pair[0]] = pair[1];\r\n    });\r\n    return new CordaX500Name(\r\n      dict[\"CN\"],\r\n      dict[\"OU\"],\r\n      dict[\"O\"],\r\n      dict[\"L\"],\r\n      dict[\"S\"],\r\n      dict[\"C\"]);\r\n  }\r\n\r\n  constructor(\r\n    public readonly commonName: string,\r\n    public readonly organizationUnit: string,\r\n    public readonly organizationName: string,\r\n    public readonly localityName: string,\r\n    public readonly stateName: string,\r\n    public readonly country: string) {\r\n    Object.freeze(this);\r\n  }\r\n\r\n  public toString(): string {\r\n    const dict = {\r\n      \"CN\": this.commonName,\r\n      \"OU\": this.organizationUnit,\r\n      \"O\": this.organizationName,\r\n      \"L\": this.localityName,\r\n      \"S\": this.stateName,\r\n      \"C\": this.country\r\n    };\r\n\r\n    return Object\r\n      .keys(dict)\r\n      .filter(key => dict[key] !== undefined && dict[key] !== null)\r\n      .map(key => `${key}=${dict[key]}`)\r\n      .join(\",\");\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/api/domain/shared/corda.ts","import { Injectable } from \"@angular/core\";\r\nimport { BaseService } from \"../base.service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { CordaX500Name, StateAndRef } from \"../shared/corda\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { TradeAssetState } from \"api/domain/states/trade-asset-state\";\r\n\r\n@Injectable()\r\nexport class TradeAssetService extends BaseService {\r\n  public getAllTradeAssets(): Observable<StateAndRef<TradeAssetState>[]> {\r\n    return this.http\r\n      .get(this.createUrl(\"tradeassets/all\"))\r\n      .map(response => response.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/api/domain/trade-assets/trade-asset.service.ts","import \"hammerjs\";\r\n\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { HttpModule } from \"@angular/http\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatListModule,\r\n  MatCardModule,\r\n  MatDialogModule,\r\n  MatSelectModule,\r\n  MatOptionModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatProgressSpinnerModule,\r\n  MatChipsModule\r\n} from \"@angular/material\";\r\n\r\nimport { RootComponent } from \"./root/root.component\";\r\nimport { MainComponent } from \"./main/main.component\";\r\n\r\nimport { NodeService } from \"../api/domain/nodes/node.service\";\r\nimport { TradeAssetService } from \"api/domain/trade-assets/trade-asset.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RootComponent,\r\n    MainComponent\r\n  ],\r\n  imports: [\r\n    FlexLayoutModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n    MatChipsModule\r\n  ],\r\n  providers: [NodeService, TradeAssetService],\r\n  bootstrap: [RootComponent],\r\n  entryComponents: []\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/app.module.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/catch\";\r\n\r\n@Injectable()\r\nexport class Config {\r\n    private config: Object;\r\n    private env: Object;\r\n\r\n    constructor(private readonly http: Http) {\r\n    }\r\n\r\n    public load(): Promise<Config> {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(\"app/config/env.json\")\r\n                .map(res => res.json())\r\n                .subscribe((env_data) => {\r\n                    this.env = env_data;\r\n                    this.http.get(\"app/config/\" + env_data.env + \".json\")\r\n                        .map(res => res.json())\r\n                        .catch((error: any) => {\r\n                            console.error(error);\r\n                            return Observable.throw(error.json().error || \"Server error\");\r\n                        })\r\n                        .subscribe((data) => {\r\n                            this.config = data;\r\n                            resolve(data);\r\n                        });\r\n                });\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/config/config.ts","module.exports = \"<div fxLayout=\\\"column\\\">\\r\\n  <div class=\\\"app-padding\\\" fxFlex>\\r\\n    <h2>Trade Assets</h2>\\r\\n    <h4>Participating as {{name?.organizationName}}</h4>\\r\\n  </div>\\r\\n  <div class=\\\"app-padding\\\" fxFlex>\\r\\n    <table>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>ID</th>\\r\\n          <th>Buyer</th>\\r\\n          <th>Supplier</th>\\r\\n          <th>Owner</th>\\r\\n          <th>Status</th>\\r\\n          <th class=\\\"align-right\\\">Value</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <ng-container *ngFor=\\\"let state of states\\\">\\r\\n          <tr>\\r\\n            <td>{{state.linearId.externalId}}</td>\\r\\n            <td>{{getName(state.buyer).organizationName}}</td>\\r\\n            <td>{{getName(state.supplier).organizationName}}</td>\\r\\n            <td>{{getName(state.owner).organizationName}}</td>\\r\\n            <td>{{state.tradeAsset.status}}</td>\\r\\n            <td class=\\\"align-right\\\">{{state.tradeAsset.amount}}</td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/main/main.component.html\n// module id = ../../../../../src/app/main/main.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/main/main.component.scss\n// module id = ../../../../../src/app/main/main.component.scss\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { StateAndRef, CordaX500Name } from \"api/domain/shared/corda\";\r\nimport { TradeAssetState } from \"api/domain/states/trade-asset-state\";\r\nimport { NodeService } from \"api/domain/nodes/node.service\";\r\nimport { TradeAssetService } from \"api/domain/trade-assets/trade-asset.service\";\r\n\r\n@Component({\r\n  selector: \"app-main\",\r\n  templateUrl: \"./main.component.html\",\r\n  styleUrls: [\"./main.component.scss\"]\r\n})\r\nexport class MainComponent implements OnInit {\r\n  private states: TradeAssetState[] = [];\r\n  private name: CordaX500Name = null;\r\n\r\n  constructor(\r\n    private readonly nodeService: NodeService,\r\n    private readonly tradeAssetService: TradeAssetService) {\r\n    this.update();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    (window as any)\r\n      .setInterval(() => this.update(), 2000);\r\n  }\r\n\r\n  public update(): void {\r\n    try {\r\n      this.nodeService\r\n        .getLocalNode()\r\n        .subscribe(response => this.name = response);\r\n\r\n      this.tradeAssetService\r\n        .getAllTradeAssets()\r\n        .subscribe(response => this.states = response.map(o => o.state.data));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  public getName(value: string): CordaX500Name {\r\n    return CordaX500Name.parse(value);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/main/main.component.ts","module.exports = \"<div fxFill fxLayout=\\\"column\\\">\\r\\n  <mat-toolbar>\\r\\n    <img class=\\\"logo\\\" src=\\\"/web/tix/assets/images/MarcoPolo.svg\\\" height=\\\"20\\\" />\\r\\n    <div fxFlex></div>\\r\\n  </mat-toolbar>\\r\\n  <mat-drawer-container fxFlex>\\r\\n    <app-main></app-main>\\r\\n  </mat-drawer-container>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/root/root.component.html\n// module id = ../../../../../src/app/root/root.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-drawer {\\n  padding: 20px; }\\n\\na.mat-button {\\n  display: block;\\n  margin-bottom: 10px;\\n  text-align: left;\\n  min-width: 240px; }\\n\\n.space-right {\\n  display: inline-block;\\n  margin-right: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/root/root.component.scss\n// module id = ../../../../../src/app/root/root.component.scss\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./root.component.html\",\r\n  styleUrls: [\"./root.component.scss\"]\r\n})\r\nexport class RootComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/app/root/root.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/tradeix-concord-ui/src/main.ts"],"sourceRoot":"webpack:///"}