group 'com.tradeix.concord'
version '1.0'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: 'org.springframework.boot'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'application'

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
}

sourceSets {
    main.kotlin.srcDirs = ['src/main/kotlin']
    main.java.srcDirs = []
    main.resources.srcDirs = ['src/main/resources']
    test.kotlin.srcDirs = []
    test.java.srcDirs = []
    test.resources.srcDirs = []
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile "org.apache.activemq:artemis-commons:2.0.0"
    compile "org.apache.activemq:artemis-core-client:2.0.0"

    cordapp project(":tradeix-concord-shared")
    cordapp project(":tradeix-concord-shared-client")
    cordapp project(":tradeix-concord-cordapp-funder")

    cordaCompile "$corda_release_group:corda-core:$corda_release_version"

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.1"
        apiVersion = "1.1"
        jvmTarget = "1.8"
        javaParameters = true
    }
}

jar {
    from {
        String[] include = [
                "kotlin-runtime-${kotlin_version}.jar",
                "kotlin-stdlib-${kotlin_version}.jar"
        ]

        configurations.compile
                .findAll { include.contains(it.name) }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.tradeix.concord.cordapp.supplier.client.receiver.ApplicationKt'
        )
    }
}