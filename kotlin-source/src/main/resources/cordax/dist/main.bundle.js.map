{"version":3,"sources":["C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/$_gendir lazy","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/currency.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/messages.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/models/change-owner.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/models/trade-asset.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/services/base.service.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/services/node.service.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/services/trade-asset.service.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/x-500-name.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/app.module.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/buyer-dashboard.component.html","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/buyer-dashboard.component.scss","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/buyer-dashboard.component.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.html","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.scss","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/conductor-dashboard.component.html","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/conductor-dashboard.component.scss","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/conductor-dashboard.component.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.html","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.scss","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/funder-dashboard/funder-dashboard.component.html","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/funder-dashboard/funder-dashboard.component.scss","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/funder-dashboard/funder-dashboard.component.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/main/main.component.html","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/main/main.component.scss","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/main/main.component.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/root/root.component.html","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/root/root.component.scss","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/root/root.component.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/change-owner-dialog/change-owner-dialog.component.html","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/change-owner-dialog/change-owner-dialog.component.scss","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/change-owner-dialog/change-owner-dialog.component.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/supplier-dashboard.component.html","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/supplier-dashboard.component.scss","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/supplier-dashboard.component.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/environments/environment.ts","C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;ACVA;AAAA;IA2BI,kBACoB,IAAY,EACZ,MAAc,EACd,eAAuB,EACvB,kBAA0B,EAC1B,IAAI;QAJJ,SAAI,GAAJ,IAAI,CAAQ;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAQ;QACvB,uBAAkB,GAAlB,kBAAkB,CAAQ;QAC1B,SAAI,GAAJ,IAAI;IACxB,CAAC;IAzBa,cAAK,GAAnB,UAAoB,KAAa;QAC7B,IAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC/B,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YAC1C,MAAM,IAAI,KAAK,CAAC,eAAa,KAAK,iBAAc,CAAC,CAAC;QACtD,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEa,2BAAkB,GAAhC;QACI,MAAM,CAAC;YACH,QAAQ,CAAC,GAAG;YACZ,QAAQ,CAAC,GAAG;YACZ,QAAQ,CAAC,GAAG;YACZ,QAAQ,CAAC,GAAG;YACZ,QAAQ,CAAC,GAAG;YACZ,QAAQ,CAAC,GAAG;SACf,CAAC;IACN,CAAC;IAUM,2BAAQ,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IApCsB,YAAG,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;IAC9D,YAAG,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,sBAAsB,CAAC,CAAC;IACpE,YAAG,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACpD,YAAG,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,mBAAmB,CAAC,CAAC;IACjE,YAAG,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;IAC3D,YAAG,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;IAgCtF,eAAC;CAAA;AAtCoB;;;;;;;;;;;;;;;;;;;;;;ACArB;IACI,8BAAmC,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAClD,CAAC;IACL,2BAAC;AAAD,CAAC;;AAED;IACI,oCAAmC,aAAqB;QAArB,kBAAa,GAAb,aAAa,CAAQ;IACxD,CAAC;IACL,iCAAC;AAAD,CAAC;;AAED;IAAsD,oDAA0B;IAC5E,0CACoB,QAAgB,EAChB,aAAqB;QAFzC,YAGI,kBAAM,aAAa,CAAC,SACvB;QAHmB,cAAQ,GAAR,QAAQ,CAAQ;QAChB,mBAAa,GAAb,aAAa,CAAQ;;IAEzC,CAAC;IACL,uCAAC;AAAD,CAAC,CANqD,0BAA0B,GAM/E;;;;;;;;;;ACdD;AAAA;IACI,8BACoB,QAAiB,EACjB,QAAmB;QADnB,aAAQ,GAAR,QAAQ,CAAS;QACjB,aAAQ,GAAR,QAAQ,CAAW;IACvC,CAAC;IAEM,8CAAe,GAAtB;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;SACrC;IACL,CAAC;IACL,2BAAC;AAAD,CAAC;;;;;;;;;;;;ACVD;AAAA;IACI,oBACoB,OAAgB,EAChB,MAAe,EACf,MAAe;QAFf,YAAO,GAAP,OAAO,CAAS;QAChB,WAAM,GAAN,MAAM,CAAS;QACf,WAAM,GAAN,MAAM,CAAS;IACnC,CAAC;IACL,iBAAC;AAAD,CAAC;;AAED;IAEI,gBAAgB;IAEhB,yBACoB,QAA0B,EAC1B,UAAsB,EACtB,KAAa,EACb,KAAa,EACb,QAAgB,EAChB,SAAiB;QALjB,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,eAAU,GAAV,UAAU,CAAY;QACtB,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,cAAS,GAAT,SAAS,CAAQ;IACrC,CAAC;IACL,sBAAC;AAAD,CAAC;;AAED;IACI,kCACoB,KAAgB,EAChB,QAAmB,EACnB,OAAgB,EAChB,MAAe,EACf,QAAmB;QAJnB,UAAK,GAAL,KAAK,CAAW;QAChB,aAAQ,GAAR,QAAQ,CAAW;QACnB,YAAO,GAAP,OAAO,CAAS;QAChB,WAAM,GAAN,MAAM,CAAS;QACf,aAAQ,GAAR,QAAQ,CAAW;IACvC,CAAC;IAEM,kDAAe,GAAtB;QACI,IAAM,MAAM,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YAClC,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;SACrC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC5C,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACL,+BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACjD0C;AACN;AAGrC;IACE,qBAAsC,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAChD,CAAC;IAES,4BAAM,GAAhB,UAAiB,QAAgB;QAC/B,MAAM,CAAC,gCAA8B,QAAU,CAAC;IAClD,CAAC;IANU,WAAW;QADvB,yEAAU,EAAE;6DAEiC,2DAAI,oBAAJ,2DAAI;OADrC,WAAW,CAOvB;IAAD,kBAAC;;CAAA;AAPuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJmB;AACE;AAEJ;AACX;AAG9B;IAAiC,+BAAW;IAA5C;;IAYA,CAAC;IAXQ,kCAAY,GAAnB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;aAC/B,GAAG,CAAC,kBAAQ,IAAI,oEAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAA/B,CAA+B,CAAC,CAAC;IACtD,CAAC;IAEM,8BAAQ,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACzB,GAAG,CAAC,kBAAQ,IAAI,OAAC,QAAQ,CAAC,IAAI,EAAe,CAAC,GAAG,CAAC,cAAI,IAAI,oEAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAApB,CAAoB,CAAC,EAA/D,CAA+D,CAAC,CAAC;IACtF,CAAC;IAXU,WAAW;QADvB,yEAAU,EAAE;OACA,WAAW,CAYvB;IAAD,kBAAC;CAAA,CAZgC,kEAAW,GAY3C;AAZuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPmB;AACE;AAI8C;AAE5D;AAG/B;IAAuC,qCAAW;IAAlD;;IAkBA,CAAC;IAjBQ,0CAAc,GAArB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;aAC/B,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAoC,EAAjD,CAAiD,CAAC,CAAC;IACxE,CAAC;IAEM,2CAAe,GAAtB,UAAuB,mBAA6C;QAClE,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE,mBAAmB,CAAC,eAAe,EAAE,CAAC;aAC7E,GAAG,CAAC,kBAAQ,IAAI,WAAI,mFAAgC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,EAA7F,CAA6F,CAAC,CAAC;IACpH,CAAC;IAEM,uCAAW,GAAlB,UAAmB,oBAA0C;QAC3D,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC,EAAE,oBAAoB,CAAC,eAAe,EAAE,CAAC;aACnF,GAAG,CAAC,kBAAQ,IAAI,WAAI,6EAA0B,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,EAA7D,CAA6D,CAAC,CAAC;IACpF,CAAC;IAjBU,iBAAiB;QAD7B,yEAAU,EAAE;OACA,iBAAiB,CAkB7B;IAAD,wBAAC;CAAA,CAlBsC,kEAAW,GAkBjD;AAlB6B;;;;;;;;;ACV9B;AAAA;IAgBI,kBACoB,UAAkB,EAClB,gBAAwB,EACxB,gBAAwB,EACxB,YAAoB,EACpB,SAAiB,EACjB,OAAe;QALf,eAAU,GAAV,UAAU,CAAQ;QAClB,qBAAgB,GAAhB,gBAAgB,CAAQ;QACxB,qBAAgB,GAAhB,gBAAgB,CAAQ;QACxB,iBAAY,GAAZ,YAAY,CAAQ;QACpB,cAAS,GAAT,SAAS,CAAQ;QACjB,YAAO,GAAP,OAAO,CAAQ;QAC/B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAvBa,cAAK,GAAnB,UAAoB,KAAa;QAC7B,IAAM,IAAI,GAAG,EAAE,CAAC;QAChB,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,cAAI;YACzB,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,QAAQ,CACf,IAAI,CAAC,IAAI,CAAC,EACV,IAAI,CAAC,IAAI,CAAC,EACV,IAAI,CAAC,GAAG,CAAC,EACT,IAAI,CAAC,GAAG,CAAC,EACT,IAAI,CAAC,GAAG,CAAC,EACT,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACnB,CAAC;IAYM,2BAAQ,GAAf;QACI,IAAM,IAAI,GAAG;YACT,IAAI,EAAE,IAAI,CAAC,UAAU;YACrB,IAAI,EAAE,IAAI,CAAC,gBAAgB;YAC3B,GAAG,EAAE,IAAI,CAAC,gBAAgB;YAC1B,GAAG,EAAE,IAAI,CAAC,YAAY;YACtB,GAAG,EAAE,IAAI,CAAC,SAAS;YACnB,GAAG,EAAE,IAAI,CAAC,OAAO;SACpB;QACD,MAAM,CAAC,MAAM;aACR,IAAI,CAAC,IAAI,CAAC;aACV,MAAM,CAAC,aAAG,IAAI,WAAI,CAAC,GAAG,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAA7C,CAA6C,CAAC;aAC5D,GAAG,CAAC,aAAG,IAAI,OAAG,GAAG,SAAI,IAAI,CAAC,GAAG,CAAG,EAArB,CAAqB,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCyD;AACjB;AACI;AACF;AACY;AAEC;AACuB;AAgBpD;AAE2B;AAEpC;AACgF;AACZ;AAIG;AAII;AAEE;AACN;AACnC;AAEY;AACa;AACqC;AAGpH,IAAM,MAAM,GAAG;IACb,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wHAA2B,EAAE;IAC7D,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,4GAAuB,EAAE;IACrD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,qHAA0B,EAAE;IAC3D,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,+GAAwB,EAAE;CACxD,CAAC;AAwCF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtCrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2EAAa;gBACb,4GAAuB;gBACvB,wJAAoC;gBACpC,4JAAwC;gBACxC,qHAA0B;gBAC1B,+GAAwB;gBACxB,4EAAa;gBACb,wHAA2B;gBAC3B,0IAA0B;aAC3B;YACD,OAAO,EAAE;gBACP,8EAAgB;gBAChB,qGAAuB;gBACvB,gFAAa;gBACb,mEAAW;gBACX,iEAAU;gBACV,2EAAgB;gBAChB,2EAAgB;gBAChB,wEAAa;gBACb,0EAAe;gBACf,wEAAa;gBACb,wEAAa;gBACb,wEAAa;gBACb,0EAAe;gBACf,0EAAe;gBACf,0EAAe;gBACf,yEAAc;gBACd,6EAAkB;gBAClB,mFAAwB;gBACxB,yEAAc;gBACd,qEAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC;aACvD;YACD,SAAS,EAAE,CAAC,uFAAW,EAAE,oGAAiB,CAAC;YAC3C,SAAS,EAAE,CAAC,2EAAa,CAAC;YAC1B,eAAe,EAAE,CAAC,wJAAoC,EAAE,4JAAwC,EAAE,0IAA0B,CAAC;SAC9H,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;AC7FtB,g4BAAg4B,8BAA8B,2BAA2B,kBAAkB,2BAA2B,qCAAqC,2BAA2B,iCAAiC,2BAA2B,oCAAoC,2BAA2B,iCAAiC,6HAA6H,oCAAoC,8GAA8G,oCAAoC,4G;;;;;;;ACAr/C;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;ACX0D;AACmB;AACqC;AAChC;AAG3B;AAOvD;IAGE,iCACmB,MAAiB,EACjB,iBAAoC;QADpC,WAAM,GAAN,MAAM,CAAW;QACjB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAJ/C,WAAM,GAAmC,EAAE,CAAC;IAKpD,CAAC;IAED,2CAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,CAAC,iBAAiB;aACnB,cAAc,EAAE;aAChB,SAAS,CAAC,kBAAQ;YACjB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC3C,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,WAAW,CAAC,cAAM,YAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,4CAAU,GAAV;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uIAA+B,EAAE;YAChD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IAED,yCAAO,GAAP,UAAQ,KAAa;QACnB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,wEAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/D,CAAC;IAhCU,uBAAuB;QALnC,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,sGAA+C;YAC/C,sGAA+C;SAChD,CAAC;6DAK2B,oEAAS,oBAAT,oEAAS,sDACE,mGAAiB,oBAAjB,mGAAiB;OAL5C,uBAAuB,CAiCnC;IAAD,8BAAC;;CAAA;AAjCmC;;;;;;;;ACbpC,wUAAwU,uBAAuB,ksBAAksB,6BAA6B,iIAAiI,WAAW,SAAS,WAAW,wmB;;;;;;;ACA9tC;AACA;;;AAGA;AACA,mCAAoC,gCAAgC,gCAAgC,EAAE;;AAEtG;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;ACX0D;AACT;AACO;AAC0B;AACV;AACa;AAQrF;IAME,yCACmB,WAAwB,EACxB,iBAAoC,EACpC,SAAwD;QAH3E,iBAOC;QANkB,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,cAAS,GAAT,SAAS,CAA+C;QAR1D,eAAU,GAAe,sEAAQ,CAAC,kBAAkB,EAAE,CAAC;QAChE,UAAK,GAA6B,IAAI,gGAAwB,EAAE,CAAC;QACjE,SAAI,GAAG,CAAC,CAAC;QACV,UAAK,GAAe,EAAE,CAAC;QAM5B,IAAI,CAAC,WAAW;aACb,QAAQ,EAAE;aACV,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC;IAC5C,CAAC;IAED,kDAAQ,GAAR;IACA,CAAC;IAED,8CAAI,GAAJ;QAAA,iBAOC;QANC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,iBAAiB;aACnB,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;aAC3B,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IA7BU,+BAA+B;QAL3C,wEAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;YACzC,0IAAyD;YACzD,0IAAyD;SAC1D,CAAC;6DAQgC,sFAAW,oBAAX,sFAAW,sDACL,mGAAiB,oBAAjB,mGAAiB,sDACzB,uEAAY,oBAAZ,uEAAY;OAT/B,+BAA+B,CA8B3C;IAAD,sCAAC;;CAAA;AA9B2C;;;;;;;;ACb5C,o4BAAo4B,8BAA8B,2BAA2B,kBAAkB,2BAA2B,qCAAqC,2BAA2B,iCAAiC,2BAA2B,oCAAoC,2BAA2B,iCAAiC,6HAA6H,oCAAoC,8GAA8G,oCAAoC,4G;;;;;;;ACAz/C;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;ACX0D;AACmB;AACqC;AAChC;AAG3B;AAOvD;IAGE,qCACmB,MAAiB,EACjB,iBAAoC;QADpC,WAAM,GAAN,MAAM,CAAW;QACjB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAJ/C,WAAM,GAAmC,EAAE,CAAC;IAKpD,CAAC;IAED,+CAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,CAAC,iBAAiB;aACnB,cAAc,EAAE;aAChB,SAAS,CAAC,kBAAQ;YACjB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC3C,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,WAAW,CAAC,cAAM,YAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,gDAAU,GAAV;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uIAA+B,EAAE;YAChD,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IAED,6CAAO,GAAP,UAAQ,KAAa;QACnB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,wEAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/D,CAAC;IAhCU,2BAA2B;QALvC,wEAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,8GAAmD;YACnD,8GAAmD;SACpD,CAAC;6DAK2B,oEAAS,oBAAT,oEAAS,sDACE,mGAAiB,oBAAjB,mGAAiB;OAL5C,2BAA2B,CAiCvC;IAAD,kCAAC;;CAAA;AAjCuC;;;;;;;;ACbxC,kUAAkU,uBAAuB,gTAAgT,uBAAuB,ksBAAksB,6BAA6B,iIAAiI,WAAW,SAAS,WAAW,wmB;;;;;;;ACA/hD;AACA;;;AAGA;AACA,mCAAoC,gCAAgC,gCAAgC,EAAE;;AAEtG;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;ACX0D;AACT;AACO;AAC0B;AACV;AACa;AAQrF;IAME,yCACmB,WAAwB,EACxB,iBAAoC,EACpC,SAAwD;QAH3E,iBAOC;QANkB,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,cAAS,GAAT,SAAS,CAA+C;QAR1D,eAAU,GAAe,sEAAQ,CAAC,kBAAkB,EAAE,CAAC;QAChE,UAAK,GAA6B,IAAI,gGAAwB,EAAE,CAAC;QACjE,SAAI,GAAG,CAAC,CAAC;QACV,UAAK,GAAe,EAAE,CAAC;QAM5B,IAAI,CAAC,WAAW;aACb,QAAQ,EAAE;aACV,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC;IAC5C,CAAC;IAED,kDAAQ,GAAR;IACA,CAAC;IAED,8CAAI,GAAJ;QAAA,iBAOC;QANC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,iBAAiB;aACnB,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;aAC3B,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IA7BU,+BAA+B;QAL3C,wEAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;YACzC,8IAAyD;YACzD,8IAAyD;SAC1D,CAAC;6DAQgC,sFAAW,oBAAX,sFAAW,sDACL,mGAAiB,oBAAjB,mGAAiB,sDACzB,uEAAY,oBAAZ,uEAAY;OAT/B,+BAA+B,CA8B3C;IAAD,sCAAC;;CAAA;AA9B2C;;;;;;;;ACb5C,wgF;;;;;;;ACAA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;ACXkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,2CAAQ,GAAR;IACA,CAAC;IALU,wBAAwB;QALpC,wEAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,wGAAgD;YAChD,wGAAgD;SACjD,CAAC;;OACW,wBAAwB,CAOpC;IAAD,+BAAC;CAAA;AAPoC;;;;;;;;ACPrC,mB;;;;;;;ACAA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;ACXkD;AAOlD;IACE;IACA,CAAC;IAED,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gFAAoC;YACpC,gFAAoC;SACrC,CAAC;;OACW,aAAa,CAMzB;IAAD,oBAAC;CAAA;AANyB;;;;;;;;ACP1B,8bAA8b,6BAA6B,+KAA+K,6BAA6B,wJAAwJ,yBAAyB,qJAAqJ,oBAAoB,i3B;;;;;;;ACAjgC;AACA;;;AAGA;AACA,qCAAsC,kBAAkB,EAAE,kBAAkB,mBAAmB,wBAAwB,qBAAqB,qBAAqB,EAAE,kBAAkB,0BAA0B,uBAAuB,EAAE,WAAW,sBAAsB,EAAE;;AAE3Q;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;ACXkD;AACT;AAC4B;AAQrE;IAGE,uBACmB,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACjC,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW;aACb,YAAY,EAAE;aACd,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,SAAS,GAAG,IAAI,EAArB,CAAqB,CAAC,CAAC;IAC9C,CAAC;IAZU,aAAa;QALzB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gFAAoC;YACpC,gFAAoC;SACrC,CAAC;6DAKgC,sFAAW,oBAAX,sFAAW,sDAChB,+DAAM,oBAAN,+DAAM;OALtB,aAAa,CAazB;IAAD,oBAAC;;CAAA;AAbyB;;;;;;;;ACV1B,4UAA4U,uBAAuB,0lB;;;;;;;ACAnW;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX0D;AACQ;AACV;AACuB;AACP;AACa;AAQrF;IAME,oCACmB,WAAwB,EACxB,iBAAoC,EACpC,SAAmD,EACpC,IAAS;QAJ3C,iBAUC;QATkB,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,cAAS,GAAT,SAAS,CAA0C;QACpC,SAAI,GAAJ,IAAI,CAAK;QAT1B,eAAU,GAAe,sEAAQ,CAAC,kBAAkB,EAAE,CAAC;QAChE,UAAK,GAAyB,IAAI,6FAAoB,EAAE,CAAC;QACzD,SAAI,GAAG,CAAC,CAAC;QACV,UAAK,GAAe,EAAE,CAAC;QAO5B,IAAI,CAAC,WAAW;aACb,QAAQ,EAAE;aACV,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC;QAE1C,IAAI,CAAC,KAAK,GAAG,IAAI,6FAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,6CAAQ,GAAR;IACA,CAAC;IAED,yCAAI,GAAJ;QAAA,iBAOC;QANC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,iBAAiB;aACnB,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAhCU,0BAA0B;QALtC,wEAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,iIAAmD;YACnD,iIAAmD;SACpD,CAAC;QAWG,gFAAM,CAAC,0EAAe,CAAC;6DAHM,sFAAW,oBAAX,sFAAW,sDACL,mGAAiB,oBAAjB,mGAAiB,sDACzB,uEAAY,oBAAZ,uEAAY;OAT/B,0BAA0B,CAiCtC;IAAD,iCAAC;;CAAA;AAjCsC;;;;;;;;ACbvC,yyBAAyyB,8BAA8B,2BAA2B,kBAAkB,2BAA2B,qCAAqC,2BAA2B,iCAAiC,2BAA2B,oCAAoC,2BAA2B,iCAAiC,6HAA6H,oCAAoC,8GAA8G,oCAAoC,kT;;;;;;;ACA95C;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;ACXkD;AAC2B;AACoB;AACf;AAG3B;AAOvD;IAIE,oCACmB,MAAiB,EACjB,iBAAoC;QADpC,WAAM,GAAN,MAAM,CAAW;QACjB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAL/C,WAAM,GAAmC,EAAE,CAAC;QAC5C,eAAU,GAAG,KAAK,CAAC;IAK3B,CAAC;IAED,8CAAS,GAAT;QAAA,iBASC;QARC,IAAI,CAAC,iBAAiB;aACnB,cAAc,EAAE;aAChB,SAAS,CAAC,kBAAQ;YACjB,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,MAAM,KAAK,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC9D,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,WAAW,CAAC,cAAM,YAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,+CAAU,GAAV,UAAW,QAAgB;QAA3B,iBAQC;QAPC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sHAA0B,EAAE;YAC3C,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE;SAC7B,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC;YACzB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAO,GAAP,UAAQ,KAAa;QACnB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,wEAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/D,CAAC;IArCU,0BAA0B;QALtC,wEAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,4GAAkD;YAClD,4GAAkD;SACnD,CAAC;6DAM2B,oEAAS,oBAAT,oEAAS,sDACE,mGAAiB,oBAAjB,mGAAiB;OAN5C,0BAA0B,CAsCtC;IAAD,iCAAC;;CAAA;AAtCsC;;;;;;;;;ACbvC;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","export class Currency {\r\n    public static readonly GBP = new Currency('GBP', '£', 100, 'Penny', 'British Pound');\r\n    public static readonly USD = new Currency('USD', '$', 100, 'Cent', 'United States Dollar');\r\n    public static readonly EUR = new Currency('EUR', '€', 100, 'Cent', 'Euro');\r\n    public static readonly AUD = new Currency('AUD', '$', 100, 'Cent', 'Australian Dollar');\r\n    public static readonly JPY = new Currency('JPY', '¥', 100, 'Sen', 'Japanese Yen');\r\n    public static readonly CNY = new Currency('CNY', '¥', 100, 'Fen', 'Chinese Yaun');\r\n\r\n    public static parse(value: string): Currency {\r\n        const result = Currency[value];\r\n        if (result === null || result === undefined) {\r\n            throw new Error(`Currency '${value}' not found.`);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public static getKnownCurrencies(): Currency[] {\r\n        return [\r\n            Currency.GBP,\r\n            Currency.USD,\r\n            Currency.EUR,\r\n            Currency.JPY,\r\n            Currency.CNY,\r\n            Currency.AUD\r\n        ];\r\n    }\r\n\r\n    public constructor(\r\n        public readonly code: string,\r\n        public readonly symbol: string,\r\n        public readonly fractionalUnits: number,\r\n        public readonly fractionalUnitName: string,\r\n        public readonly name) {\r\n    }\r\n\r\n    public toString() {\r\n        return this.code;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/currency.ts","export class ErrorResponseMessage {\r\n    public constructor(public readonly message: string) {\r\n    }\r\n}\r\n\r\nexport class TransactionResponseMessage {\r\n    public constructor(public readonly transactionId: string) {\r\n    }\r\n}\r\n\r\nexport class LinearTransactionResponseMessage extends TransactionResponseMessage {\r\n    public constructor(\r\n        public readonly linearId: string,\r\n        public readonly transactionId: string) {\r\n        super(transactionId);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/messages.ts","import { X500Name } from '../x-500-name'\r\n\r\nexport class ChangeOwnerViewModel {\r\n    constructor(\r\n        public readonly linearId?: string,\r\n        public readonly newOwner?: X500Name) {\r\n    }\r\n\r\n    public toRequestObject(): object {\r\n        return {\r\n            linearId: this.linearId,\r\n            newOwner: this.newOwner.toString()\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/models/change-owner.ts","import { X500Name } from '../x-500-name'\r\nimport { Currency } from '../currency';\r\nimport { UniqueIdentifier } from '../corda';\r\n\r\nexport class TradeAsset {\r\n    public constructor(\r\n        public readonly assetId?: string,\r\n        public readonly status?: string,\r\n        public readonly amount?: string) {\r\n    }\r\n}\r\n\r\nexport class TradeAssetState {\r\n    public readonly participants: string[];\r\n    // Other fields?\r\n\r\n    public constructor(\r\n        public readonly linearId: UniqueIdentifier,\r\n        public readonly tradeAsset: TradeAsset,\r\n        public readonly owner: string,\r\n        public readonly buyer: string,\r\n        public readonly supplier: string,\r\n        public readonly conductor: string) {\r\n    }\r\n}\r\n\r\nexport class IssueTradeAssetViewModel {\r\n    public constructor(\r\n        public readonly buyer?: X500Name,\r\n        public readonly supplier?: X500Name,\r\n        public readonly assetId?: string,\r\n        public readonly amount?: number,\r\n        public readonly currency?: Currency) {\r\n    }\r\n\r\n    public toRequestObject(): object {\r\n        const result = {\r\n            supplier: this.supplier.toString(),\r\n            assetId: this.assetId,\r\n            amount: this.amount,\r\n            currency: this.currency.toString()\r\n        }\r\n\r\n        if (this.buyer) {\r\n            result['buyer'] = this.buyer.toString();\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/models/trade-asset.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class BaseService {\r\n  public constructor(protected readonly http: Http) {\r\n  }\r\n\r\n  protected getUrl(endpoint: string): string {\r\n    return `http://localhost:10007/api/${endpoint}`;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/services/base.service.ts","import { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { X500Name } from '../x-500-name';\r\nimport 'rxjs/add/operator/map'\r\n\r\n@Injectable()\r\nexport class NodeService extends BaseService {\r\n  public getLocalNode(): Observable<X500Name> {\r\n    return this.http\r\n      .get(this.getUrl('nodes/local'))\r\n      .map(response => X500Name.parse(response.json()));\r\n  }\r\n\r\n  public getNodes(): Observable<X500Name[]> {\r\n    return this.http\r\n      .get(this.getUrl('nodes'))\r\n      .map(response => (response.json() as string[]).map(name => X500Name.parse(name)));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/services/node.service.ts","import { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { TradeAssetState, IssueTradeAssetViewModel } from '../models/trade-asset';\r\nimport { ChangeOwnerViewModel } from '../models/change-owner';\r\nimport { TransactionResponseMessage, LinearTransactionResponseMessage } from '../messages';\r\nimport { StateAndRef } from '../corda';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class TradeAssetService extends BaseService {\r\n  public getTradeAssets(): Observable<StateAndRef<TradeAssetState>[]> {\r\n    return this.http\r\n      .get(this.getUrl('tradeassets'))\r\n      .map(response => response.json() as StateAndRef<TradeAssetState>[]);\r\n  }\r\n\r\n  public issueTradeAsset(tradeAssetViewModel: IssueTradeAssetViewModel): Observable<LinearTransactionResponseMessage> {\r\n    return this.http\r\n      .post(this.getUrl('tradeassets/issue'), tradeAssetViewModel.toRequestObject())\r\n      .map(response => new LinearTransactionResponseMessage(response.json().linearId, response.json().transactionId));\r\n  }\r\n\r\n  public changeOwner(changeOwnerViewModel: ChangeOwnerViewModel): Observable<TransactionResponseMessage> {\r\n    return this.http\r\n      .put(this.getUrl('tradeassets/changeowner'), changeOwnerViewModel.toRequestObject())\r\n      .map(response => new TransactionResponseMessage(response.json().transactionId));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/services/trade-asset.service.ts","export class X500Name {\r\n    public static parse(value: string): X500Name {\r\n        const dict = {};\r\n        value.split(',').forEach(part => {\r\n            const pair = part.split('=');\r\n            dict[pair[0]] = pair[1];\r\n        });\r\n        return new X500Name(\r\n            dict['CN'],\r\n            dict['OU'],\r\n            dict['O'],\r\n            dict['L'],\r\n            dict['S'],\r\n            dict['C']);\r\n    }\r\n\r\n    constructor(\r\n        public readonly commonName: string,\r\n        public readonly organizationUnit: string,\r\n        public readonly organizationName: string,\r\n        public readonly localityName: string,\r\n        public readonly stateName: string,\r\n        public readonly country: string) {\r\n        Object.freeze(this);\r\n    }\r\n\r\n    public toString(): string {\r\n        const dict = {\r\n            'CN': this.commonName,\r\n            'OU': this.organizationUnit,\r\n            'O': this.organizationName,\r\n            'L': this.localityName,\r\n            'S': this.stateName,\r\n            'C': this.country\r\n        }\r\n        return Object\r\n            .keys(dict)\r\n            .filter(key => dict[key] !== undefined && dict[key] !== null)\r\n            .map(key => `${key}=${dict[key]}`)\r\n            .join(',')\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/api/domain/x-500-name.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatListModule,\r\n  MatCardModule,\r\n  MatDialogModule,\r\n  MatSelectModule,\r\n  MatOptionModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatProgressSpinnerModule,\r\n  MatChipsModule\r\n} from '@angular/material';\r\n\r\nimport { RootComponent } from './root/root.component';\r\n\r\nimport 'hammerjs';\r\nimport { ConductorDashboardComponent } from './conductor-dashboard/conductor-dashboard.component';\r\nimport { BuyerDashboardComponent } from './buyer-dashboard/buyer-dashboard.component';\r\n\r\nimport {\r\n  NewPurchaseOrderDialogComponent as BuyerNewPurchaseOrderDialogComponent\r\n} from './buyer-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component';\r\n\r\nimport {\r\n  NewPurchaseOrderDialogComponent as ConductorNewPurchaseOrderDialogComponent\r\n} from './conductor-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component';\r\n\r\nimport { SupplierDashboardComponent } from './supplier-dashboard/supplier-dashboard.component';\r\nimport { FunderDashboardComponent } from './funder-dashboard/funder-dashboard.component';\r\nimport { MainComponent } from './main/main.component';\r\n\r\nimport { NodeService } from '../api/domain/services/node.service';\r\nimport { TradeAssetService } from '../api/domain/services/trade-asset.service';\r\nimport { ChangeOwnerDialogComponent } from './supplier-dashboard/change-owner-dialog/change-owner-dialog.component';\r\n\r\n\r\nconst routes = [\r\n  { path: 'conductor', component: ConductorDashboardComponent },\r\n  { path: 'buyer', component: BuyerDashboardComponent },\r\n  { path: 'supplier', component: SupplierDashboardComponent },\r\n  { path: 'funder', component: FunderDashboardComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RootComponent,\r\n    BuyerDashboardComponent,\r\n    BuyerNewPurchaseOrderDialogComponent,\r\n    ConductorNewPurchaseOrderDialogComponent,\r\n    SupplierDashboardComponent,\r\n    FunderDashboardComponent,\r\n    MainComponent,\r\n    ConductorDashboardComponent,\r\n    ChangeOwnerDialogComponent\r\n  ],\r\n  imports: [\r\n    FlexLayoutModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n    MatChipsModule,\r\n    RouterModule.forRoot(routes, { enableTracing: false })\r\n  ],\r\n  providers: [NodeService, TradeAssetService],\r\n  bootstrap: [RootComponent],\r\n  entryComponents: [BuyerNewPurchaseOrderDialogComponent, ConductorNewPurchaseOrderDialogComponent, ChangeOwnerDialogComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/app.module.ts","module.exports = \"<div fxLayout=\\\"column\\\">\\r\\n  <div class=\\\"app-padding\\\" fxFlex>\\r\\n    <div class=\\\"fxFlex\\\" fxLayout=\\\"row\\\">\\r\\n      <div fxFlex>\\r\\n        <h1>Buyer Dashboard</h1>\\r\\n      </div>\\r\\n      <div>\\r\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"openDialog()\\\">New Trade Asset</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"app-padding\\\" fxFlex>\\r\\n    <table>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Linear ID</th>\\r\\n          <th>Transaction ID</th>\\r\\n          <th>Asset ID</th>\\r\\n          <th>Buyer</th>\\r\\n          <th>Supplier</th>\\r\\n          <th>Owner</th>\\r\\n          <th>Status</th>\\r\\n          <th class=\\\"align-right\\\">Value</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody *ngIf=\\\"states.length > 0\\\">\\r\\n        <ng-container *ngFor=\\\"let state of states\\\">\\r\\n          <tr>\\r\\n            <td>{{state.state.data.linearId.id}}</td>\\r\\n            <td>{{state.ref.txhash}}</td>\\r\\n            <td>{{state.state.data.tradeAsset.assetId}}</td>\\r\\n            <td>{{getName(state.state.data.buyer)}}</td>\\r\\n            <td>{{getName(state.state.data.supplier)}}</td>\\r\\n            <td>{{getName(state.state.data.owner)}}</td>\\r\\n            <td>\\r\\n              <mat-chip-list>\\r\\n                <mat-chip selected=\\\"true\\\" color=\\\"accent\\\">{{state.state.data.tradeAsset.status}}</mat-chip>\\r\\n              </mat-chip-list>\\r\\n            </td>\\r\\n            <td class=\\\"align-right\\\">{{state.state.data.tradeAsset.amount}}</td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/buyer-dashboard.component.html\n// module id = ../../../../../src/app/buyer-dashboard/buyer-dashboard.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/buyer-dashboard.component.scss\n// module id = ../../../../../src/app/buyer-dashboard/buyer-dashboard.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { NewPurchaseOrderDialogComponent } from './new-purchase-order-dialog/new-purchase-order-dialog.component';\r\nimport { TradeAssetService } from '../../api/domain/services/trade-asset.service';\r\nimport { TradeAssetState } from '../../api/domain/models/trade-asset';\r\nimport { StateAndRef } from '../../api/domain/corda';\r\nimport { X500Name } from '../../api/domain/x-500-name';\r\n\r\n@Component({\r\n  selector: 'app-buyer-dashboard',\r\n  templateUrl: './buyer-dashboard.component.html',\r\n  styleUrls: ['./buyer-dashboard.component.scss']\r\n})\r\nexport class BuyerDashboardComponent implements OnInit {\r\n  private states: StateAndRef<TradeAssetState>[] = [];\r\n\r\n  constructor(\r\n    private readonly dialog: MatDialog,\r\n    private readonly tradeAssetService: TradeAssetService) {\r\n  }\r\n\r\n  getStates(): void {\r\n    this.tradeAssetService\r\n      .getTradeAssets()\r\n      .subscribe(response => {\r\n        if (response.length !== this.states.length) {\r\n          this.states = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getStates();\r\n    setInterval(() => this.getStates(), 2000);\r\n  }\r\n\r\n  openDialog() {\r\n    this.dialog.open(NewPurchaseOrderDialogComponent, {\r\n      width: '640px',\r\n      disableClose: true\r\n    });\r\n  }\r\n\r\n  getName(value: string): string {\r\n    return !!value ? X500Name.parse(value).organizationName : '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/buyer-dashboard.component.ts","module.exports = \"<h2>New Trade Asset</h2>\\r\\n<div *ngIf=\\\"view === 0\\\">\\r\\n  <div fxLayout=\\\"column\\\">\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <mat-form-field fxFlex=\\\"100\\\">\\r\\n        <mat-select [(ngModel)]=\\\"model.supplier\\\" placeholder=\\\"Supplier\\\">\\r\\n          <mat-option *ngFor=\\\"let node of nodes\\\" [value]=\\\"node\\\">{{node.organizationName}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <mat-form-field fxFlex=\\\"100\\\">\\r\\n        <input matInput [(ngModel)]=\\\"model.assetId\\\" type=\\\"text\\\" placeholder=\\\"Asset ID\\\" />\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <mat-form-field fxFlex=\\\"100\\\">\\r\\n        <input matInput [(ngModel)]=\\\"model.amount\\\" type=\\\"text\\\" placeholder=\\\"Value\\\" />\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <mat-form-field fxFlex=\\\"100\\\">\\r\\n        <mat-select [(ngModel)]=\\\"model.currency\\\" placeholder=\\\"Currency\\\" #select=\\\"matSelect\\\">\\r\\n          <mat-select-trigger>{{select.selected?.value.code}}</mat-select-trigger>\\r\\n          <mat-option *ngFor=\\\"let item of currencies\\\" [value]=\\\"item\\\">\\r\\n            <span fxFlex>{{item.code}}</span>{{item.name}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\">\\r\\n    <button mat-raised-button fxFlex color=\\\"accent\\\" (click)=\\\"okay()\\\">OK</button>\\r\\n    <div fxFlex=\\\"5\\\"></div>\\r\\n    <button mat-raised-button fxFlex color=\\\"warn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"view === 1\\\">\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"app-padding\\\">\\r\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n    <p>Conducting transaction, please wait...</p>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.html\n// module id = ../../../../../src/app/buyer-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-icon {\\n  -webkit-transform: scale(2);\\n          transform: scale(2); }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.scss\n// module id = ../../../../../src/app/buyer-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { Currency } from '../../../api/domain/currency';\r\nimport { IssueTradeAssetViewModel } from '../../../api/domain/models/trade-asset';\r\nimport { NodeService } from '../../../api/domain/services/node.service';\r\nimport { TradeAssetService } from '../../../api/domain/services/trade-asset.service';\r\nimport { X500Name } from '../../../api/domain/x-500-name';\r\n\r\n@Component({\r\n  selector: 'app-new-purchase-order-dialog',\r\n  templateUrl: './new-purchase-order-dialog.component.html',\r\n  styleUrls: ['./new-purchase-order-dialog.component.scss']\r\n})\r\nexport class NewPurchaseOrderDialogComponent implements OnInit {\r\n  private readonly currencies: Currency[] = Currency.getKnownCurrencies();\r\n  private model: IssueTradeAssetViewModel = new IssueTradeAssetViewModel();\r\n  private view = 0;\r\n  public nodes: X500Name[] = [];\r\n\r\n  constructor(\r\n    private readonly nodeService: NodeService,\r\n    private readonly tradeAssetService: TradeAssetService,\r\n    private readonly dialogRef: MatDialogRef<NewPurchaseOrderDialogComponent>) {\r\n    this.nodeService\r\n      .getNodes()\r\n      .subscribe(nodes => this.nodes = nodes);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  okay(): void {\r\n    this.view = 1;\r\n    this.tradeAssetService\r\n      .issueTradeAsset(this.model)\r\n      .subscribe(response => {\r\n        this.cancel();\r\n      });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/buyer-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.ts","module.exports = \"<div fxLayout=\\\"column\\\">\\r\\n  <div class=\\\"app-padding\\\" fxFlex>\\r\\n    <div class=\\\"fxFlex\\\" fxLayout=\\\"row\\\">\\r\\n      <div fxFlex>\\r\\n        <h1>Conductor Dashboard</h1>\\r\\n      </div>\\r\\n      <div>\\r\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"openDialog()\\\">New Trade Asset</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"app-padding\\\" fxFlex>\\r\\n    <table>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Linear ID</th>\\r\\n          <th>Transaction ID</th>\\r\\n          <th>Asset ID</th>\\r\\n          <th>Buyer</th>\\r\\n          <th>Supplier</th>\\r\\n          <th>Owner</th>\\r\\n          <th>Status</th>\\r\\n          <th class=\\\"align-right\\\">Value</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody *ngIf=\\\"states.length > 0\\\">\\r\\n        <ng-container *ngFor=\\\"let state of states\\\">\\r\\n          <tr>\\r\\n            <td>{{state.state.data.linearId.id}}</td>\\r\\n            <td>{{state.ref.txhash}}</td>\\r\\n            <td>{{state.state.data.tradeAsset.assetId}}</td>\\r\\n            <td>{{getName(state.state.data.buyer)}}</td>\\r\\n            <td>{{getName(state.state.data.supplier)}}</td>\\r\\n            <td>{{getName(state.state.data.owner)}}</td>\\r\\n            <td>\\r\\n              <mat-chip-list>\\r\\n                <mat-chip selected=\\\"true\\\" color=\\\"accent\\\">{{state.state.data.tradeAsset.status}}</mat-chip>\\r\\n              </mat-chip-list>\\r\\n            </td>\\r\\n            <td class=\\\"align-right\\\">{{state.state.data.tradeAsset.amount}}</td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/conductor-dashboard.component.html\n// module id = ../../../../../src/app/conductor-dashboard/conductor-dashboard.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/conductor-dashboard.component.scss\n// module id = ../../../../../src/app/conductor-dashboard/conductor-dashboard.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { NewPurchaseOrderDialogComponent } from './new-purchase-order-dialog/new-purchase-order-dialog.component';\r\nimport { TradeAssetService } from '../../api/domain/services/trade-asset.service';\r\nimport { TradeAssetState } from '../../api/domain/models/trade-asset';\r\nimport { StateAndRef } from '../../api/domain/corda';\r\nimport { X500Name } from '../../api/domain/x-500-name';\r\n\r\n@Component({\r\n  selector: 'app-conductor-dashboard',\r\n  templateUrl: './conductor-dashboard.component.html',\r\n  styleUrls: ['./conductor-dashboard.component.scss']\r\n})\r\nexport class ConductorDashboardComponent implements OnInit {\r\n  private states: StateAndRef<TradeAssetState>[] = [];\r\n\r\n  constructor(\r\n    private readonly dialog: MatDialog,\r\n    private readonly tradeAssetService: TradeAssetService) {\r\n  }\r\n\r\n  getStates(): void {\r\n    this.tradeAssetService\r\n      .getTradeAssets()\r\n      .subscribe(response => {\r\n        if (response.length !== this.states.length) {\r\n          this.states = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getStates();\r\n    setInterval(() => this.getStates(), 2000);\r\n  }\r\n\r\n  openDialog() {\r\n    this.dialog.open(NewPurchaseOrderDialogComponent, {\r\n      width: '640px',\r\n      disableClose: true\r\n    });\r\n  }\r\n\r\n  getName(value: string): string {\r\n    return !!value ? X500Name.parse(value).organizationName : '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/conductor-dashboard.component.ts","module.exports = \"<h2>New Trade Asset</h2>\\r\\n<div *ngIf=\\\"view === 0\\\">\\r\\n  <div fxLayout=\\\"column\\\">\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <mat-form-field fxFlex=\\\"100\\\">\\r\\n        <mat-select [(ngModel)]=\\\"model.buyer\\\" placeholder=\\\"Buyer\\\">\\r\\n          <mat-option *ngFor=\\\"let node of nodes\\\" [value]=\\\"node\\\">{{node.organizationName}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <mat-form-field fxFlex=\\\"100\\\">\\r\\n        <mat-select [(ngModel)]=\\\"model.supplier\\\" placeholder=\\\"Supplier\\\">\\r\\n          <mat-option *ngFor=\\\"let node of nodes\\\" [value]=\\\"node\\\">{{node.organizationName}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <mat-form-field fxFlex=\\\"100\\\">\\r\\n        <input matInput [(ngModel)]=\\\"model.assetId\\\" type=\\\"text\\\" placeholder=\\\"Asset ID\\\" />\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <mat-form-field fxFlex=\\\"100\\\">\\r\\n        <input matInput [(ngModel)]=\\\"model.amount\\\" type=\\\"text\\\" placeholder=\\\"Value\\\" />\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <mat-form-field fxFlex=\\\"100\\\">\\r\\n        <mat-select [(ngModel)]=\\\"model.currency\\\" placeholder=\\\"Currency\\\" #select=\\\"matSelect\\\">\\r\\n          <mat-select-trigger>{{select.selected?.value.code}}</mat-select-trigger>\\r\\n          <mat-option *ngFor=\\\"let item of currencies\\\" [value]=\\\"item\\\">\\r\\n            <span fxFlex>{{item.code}}</span>{{item.name}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\">\\r\\n    <button mat-raised-button fxFlex color=\\\"accent\\\" (click)=\\\"okay()\\\">OK</button>\\r\\n    <div fxFlex=\\\"5\\\"></div>\\r\\n    <button mat-raised-button fxFlex color=\\\"warn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"view === 1\\\">\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"app-padding\\\">\\r\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n    <p>Conducting transaction, please wait...</p>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.html\n// module id = ../../../../../src/app/conductor-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-icon {\\n  -webkit-transform: scale(2);\\n          transform: scale(2); }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.scss\n// module id = ../../../../../src/app/conductor-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { Currency } from '../../../api/domain/currency';\r\nimport { IssueTradeAssetViewModel } from '../../../api/domain/models/trade-asset';\r\nimport { NodeService } from '../../../api/domain/services/node.service';\r\nimport { TradeAssetService } from '../../../api/domain/services/trade-asset.service';\r\nimport { X500Name } from '../../../api/domain/x-500-name';\r\n\r\n@Component({\r\n  selector: 'app-new-purchase-order-dialog',\r\n  templateUrl: './new-purchase-order-dialog.component.html',\r\n  styleUrls: ['./new-purchase-order-dialog.component.scss']\r\n})\r\nexport class NewPurchaseOrderDialogComponent implements OnInit {\r\n  private readonly currencies: Currency[] = Currency.getKnownCurrencies();\r\n  private model: IssueTradeAssetViewModel = new IssueTradeAssetViewModel();\r\n  private view = 0;\r\n  public nodes: X500Name[] = [];\r\n\r\n  constructor(\r\n    private readonly nodeService: NodeService,\r\n    private readonly tradeAssetService: TradeAssetService,\r\n    private readonly dialogRef: MatDialogRef<NewPurchaseOrderDialogComponent>) {\r\n    this.nodeService\r\n      .getNodes()\r\n      .subscribe(nodes => this.nodes = nodes);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  okay(): void {\r\n    this.view = 1;\r\n    this.tradeAssetService\r\n      .issueTradeAsset(this.model)\r\n      .subscribe(response => {\r\n        this.cancel();\r\n      });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/conductor-dashboard/new-purchase-order-dialog/new-purchase-order-dialog.component.ts","module.exports = \"<div fxLayout=\\\"column\\\">\\r\\n  <div class=\\\"app-padding\\\" fxFlex>\\r\\n    <div class=\\\"fxFlex\\\" fxLayout=\\\"row\\\">\\r\\n      <div fxFlex>\\r\\n        <h1>Supplier Dashboard</h1>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"app-padding\\\" fxFlex>\\r\\n    <table>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Linear ID</th>\\r\\n          <th>Transaction ID</th>\\r\\n          <th>Asset ID</th>\\r\\n          <th>Buyer</th>\\r\\n          <th>Supplier</th>\\r\\n          <th>Owner</th>\\r\\n          <th>Value</th>\\r\\n          <th>Actions</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td>e267a4b9-76e3-488b-bc79-b52ee93caae7</td>\\r\\n          <td>C3AB8FF13720E8AD9047DD39466B3C8974E592C2FA383D4A3960714CAEF0C4F2</td>\\r\\n          <td>TRADE-ASSET-000-001</td>\\r\\n          <td>Alice In Wonderland</td>\\r\\n          <td>Bob The Builder</td>\\r\\n          <td>Charlie And The Chocolate Factory</td>\\r\\n          <td>12,000 GBP</td>\\r\\n          <td><button mat-raised-button color=\\\"accent\\\" disabled>Settle</button></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>e267a4b9-76e3-488b-bc79-b52ee93caae7</td>\\r\\n          <td>C3AB8FF13720E8AD9047DD39466B3C8974E592C2FA383D4A3960714CAEF0C4F2</td>\\r\\n          <td>TRADE-ASSET-000-001</td>\\r\\n          <td>Alice In Wonderland</td>\\r\\n          <td>Bob The Builder</td>\\r\\n          <td>Charlie And The Chocolate Factory</td>\\r\\n          <td>12,000 GBP</td>\\r\\n          <td><button mat-raised-button color=\\\"accent\\\">Settle</button></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>e267a4b9-76e3-488b-bc79-b52ee93caae7</td>\\r\\n          <td>C3AB8FF13720E8AD9047DD39466B3C8974E592C2FA383D4A3960714CAEF0C4F2</td>\\r\\n          <td>TRADE-ASSET-000-001</td>\\r\\n          <td>Alice In Wonderland</td>\\r\\n          <td>Bob The Builder</td>\\r\\n          <td>Charlie And The Chocolate Factory</td>\\r\\n          <td>12,000 GBP</td>\\r\\n          <td><button mat-raised-button color=\\\"accent\\\">Settle</button></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>e267a4b9-76e3-488b-bc79-b52ee93caae7</td>\\r\\n          <td>C3AB8FF13720E8AD9047DD39466B3C8974E592C2FA383D4A3960714CAEF0C4F2</td>\\r\\n          <td>TRADE-ASSET-000-001</td>\\r\\n          <td>Alice In Wonderland</td>\\r\\n          <td>Bob The Builder</td>\\r\\n          <td>Charlie And The Chocolate Factory</td>\\r\\n          <td>12,000 GBP</td>\\r\\n          <td><button mat-raised-button color=\\\"accent\\\">Settle</button></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/funder-dashboard/funder-dashboard.component.html\n// module id = ../../../../../src/app/funder-dashboard/funder-dashboard.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/funder-dashboard/funder-dashboard.component.scss\n// module id = ../../../../../src/app/funder-dashboard/funder-dashboard.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-funder-dashboard',\r\n  templateUrl: './funder-dashboard.component.html',\r\n  styleUrls: ['./funder-dashboard.component.scss']\r\n})\r\nexport class FunderDashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/funder-dashboard/funder-dashboard.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/main/main.component.html\n// module id = ../../../../../src/app/main/main.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/main/main.component.scss\n// module id = ../../../../../src/app/main/main.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/main/main.component.ts","module.exports = \"<div fxFill fxLayout=\\\"column\\\">\\r\\n  <mat-toolbar>\\r\\n    <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n      <mat-icon *ngIf=\\\"!sidenav.opened\\\">menu</mat-icon>\\r\\n      <mat-icon *ngIf=\\\"sidenav.opened\\\">close</mat-icon>\\r\\n    </button>\\r\\n    <img class=\\\"logo\\\" src=\\\"../../assets/images/MarcoPolo.svg\\\" height=\\\"20\\\" />\\r\\n    <div fxFlex></div>\\r\\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\">Hello, {{localNode?.organizationName}}</button>\\r\\n    <mat-menu #menu=\\\"matMenu\\\">\\r\\n      <mat-list>\\r\\n        <mat-list-item>\\r\\n          <mat-icon class=\\\"space-right\\\">face</mat-icon>\\r\\n          <span>{{localNode?.organizationName}}</span>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <mat-icon class=\\\"space-right\\\">location_on</mat-icon>\\r\\n          <span>{{localNode?.localityName}}</span>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <mat-icon class=\\\"space-right\\\">language</mat-icon>\\r\\n          <span>{{localNode?.country}}</span>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <button fxFlex mat-raised-button color=\\\"accent\\\">Sign Out</button>\\r\\n        </mat-list-item>\\r\\n      </mat-list>\\r\\n    </mat-menu>\\r\\n  </mat-toolbar>\\r\\n  <mat-drawer-container fxFlex>\\r\\n    <mat-drawer fxLayout=\\\"column\\\" mode=\\\"over\\\" #sidenav>\\r\\n      <a mat-button routerLink=\\\"./conductor\\\">\\r\\n        <mat-icon>dashboard</mat-icon> Conductor Dashboard</a>\\r\\n      <a mat-button routerLink=\\\"./buyer\\\">\\r\\n        <mat-icon>dashboard</mat-icon> Buyer Dashboard</a>\\r\\n      <a mat-button routerLink=\\\"./supplier\\\">\\r\\n        <mat-icon>dashboard</mat-icon> Supplier Dashboard</a>\\r\\n      <a mat-button routerLink=\\\"./funder\\\">\\r\\n        <mat-icon>dashboard</mat-icon> Funder Dashboard</a>\\r\\n    </mat-drawer>\\r\\n    <router-outlet></router-outlet>\\r\\n  </mat-drawer-container>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/root/root.component.html\n// module id = ../../../../../src/app/root/root.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-drawer {\\n  padding: 20px; }\\n\\na.mat-button {\\n  display: block;\\n  margin-bottom: 10px;\\n  text-align: left;\\n  min-width: 240px; }\\n\\n.space-right {\\n  display: inline-block;\\n  margin-right: 20px; }\\n\\n.logo {\\n  margin-left: 16px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/root/root.component.scss\n// module id = ../../../../../src/app/root/root.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NodeService } from '../../api/domain/services/node.service';\r\nimport { X500Name } from '../../api/domain/x-500-name';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './root.component.html',\r\n  styleUrls: ['./root.component.scss']\r\n})\r\nexport class RootComponent implements OnInit {\r\n  private localNode: X500Name;\r\n\r\n  constructor(\r\n    private readonly nodeService: NodeService,\r\n    private readonly router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.nodeService\r\n      .getLocalNode()\r\n      .subscribe(node => this.localNode = node);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/root/root.component.ts","module.exports = \"<h2>Change Asset Owner</h2>\\r\\n<div *ngIf=\\\"view === 0\\\">\\r\\n  <div fxLayout=\\\"column\\\">\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <mat-form-field fxFlex=\\\"100\\\">\\r\\n        <mat-select [(ngModel)]=\\\"model.newOwner\\\" placeholder=\\\"New Owner\\\">\\r\\n          <mat-option *ngFor=\\\"let node of nodes\\\" [value]=\\\"node\\\">{{node.organizationName}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\">\\r\\n    <button mat-raised-button fxFlex color=\\\"accent\\\" (click)=\\\"okay()\\\">OK</button>\\r\\n    <div fxFlex=\\\"5\\\"></div>\\r\\n    <button mat-raised-button fxFlex color=\\\"warn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"view === 1\\\">\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"app-padding\\\">\\r\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n    <p>Conducting transaction, please wait...</p>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/change-owner-dialog/change-owner-dialog.component.html\n// module id = ../../../../../src/app/supplier-dashboard/change-owner-dialog/change-owner-dialog.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/change-owner-dialog/change-owner-dialog.component.scss\n// module id = ../../../../../src/app/supplier-dashboard/change-owner-dialog/change-owner-dialog.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Currency } from '../../../api/domain/currency';\r\nimport { ChangeOwnerViewModel } from '../../../api/domain/models/change-owner';\r\nimport { NodeService } from '../../../api/domain/services/node.service';\r\nimport { TradeAssetService } from '../../../api/domain/services/trade-asset.service';\r\nimport { X500Name } from '../../../api/domain/x-500-name';\r\n\r\n@Component({\r\n  selector: 'app-change-owner-dialog',\r\n  templateUrl: './change-owner-dialog.component.html',\r\n  styleUrls: ['./change-owner-dialog.component.scss']\r\n})\r\nexport class ChangeOwnerDialogComponent implements OnInit {\r\n  private readonly currencies: Currency[] = Currency.getKnownCurrencies();\r\n  private model: ChangeOwnerViewModel = new ChangeOwnerViewModel();\r\n  private view = 0;\r\n  public nodes: X500Name[] = [];\r\n\r\n  constructor(\r\n    private readonly nodeService: NodeService,\r\n    private readonly tradeAssetService: TradeAssetService,\r\n    private readonly dialogRef: MatDialogRef<ChangeOwnerDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    this.nodeService\r\n      .getNodes()\r\n      .subscribe(nodes => this.nodes = nodes);\r\n\r\n    this.model = new ChangeOwnerViewModel(data.linearId);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  okay(): void {\r\n    this.view = 1;\r\n    this.tradeAssetService\r\n      .changeOwner(this.model)\r\n      .subscribe(response => {\r\n        this.cancel();\r\n      });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/change-owner-dialog/change-owner-dialog.component.ts","module.exports = \"<div fxLayout=\\\"column\\\">\\r\\n  <div class=\\\"app-padding\\\" fxFlex>\\r\\n    <div class=\\\"fxFlex\\\" fxLayout=\\\"row\\\">\\r\\n      <div fxFlex>\\r\\n        <h1>Supplier Dashboard</h1>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"app-padding\\\" fxFlex>\\r\\n    <table>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Linear ID</th>\\r\\n          <th>Transaction ID</th>\\r\\n          <th>Asset ID</th>\\r\\n          <th>Buyer</th>\\r\\n          <th>Supplier</th>\\r\\n          <th>Owner</th>\\r\\n          <th>Status</th>\\r\\n          <th class=\\\"align-right\\\">Value</th>\\r\\n          <th class=\\\"align-right\\\"></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody *ngIf=\\\"states.length > 0\\\">\\r\\n        <ng-container *ngFor=\\\"let state of states\\\">\\r\\n          <tr>\\r\\n            <td>{{state.state.data.linearId.id}}</td>\\r\\n            <td>{{state.ref.txhash}}</td>\\r\\n            <td>{{state.state.data.tradeAsset.assetId}}</td>\\r\\n            <td>{{getName(state.state.data.buyer)}}</td>\\r\\n            <td>{{getName(state.state.data.supplier)}}</td>\\r\\n            <td>{{getName(state.state.data.owner)}}</td>\\r\\n            <td>\\r\\n              <mat-chip-list>\\r\\n                <mat-chip selected=\\\"true\\\" color=\\\"accent\\\">{{state.state.data.tradeAsset.status}}</mat-chip>\\r\\n              </mat-chip-list>\\r\\n            </td>\\r\\n            <td class=\\\"align-right\\\">{{state.state.data.tradeAsset.amount}}</td>\\r\\n            <td class=\\\"align-right\\\">\\r\\n              <button mat-raised-button color=\\\"accent\\\" (click)=\\\"openDialog(state.state.data.linearId.id)\\\">Change Owner</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/supplier-dashboard.component.html\n// module id = ../../../../../src/app/supplier-dashboard/supplier-dashboard.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/supplier-dashboard.component.scss\n// module id = ../../../../../src/app/supplier-dashboard/supplier-dashboard.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ChangeOwnerDialogComponent } from './change-owner-dialog/change-owner-dialog.component';\r\nimport { TradeAssetService } from '../../api/domain/services/trade-asset.service';\r\nimport { TradeAssetState } from '../../api/domain/models/trade-asset';\r\nimport { StateAndRef } from '../../api/domain/corda';\r\nimport { X500Name } from '../../api/domain/x-500-name';\r\n\r\n@Component({\r\n  selector: 'app-supplier-dashboard',\r\n  templateUrl: './supplier-dashboard.component.html',\r\n  styleUrls: ['./supplier-dashboard.component.scss']\r\n})\r\nexport class SupplierDashboardComponent implements OnInit {\r\n  private states: StateAndRef<TradeAssetState>[] = [];\r\n  private invalidate = false;\r\n\r\n  constructor(\r\n    private readonly dialog: MatDialog,\r\n    private readonly tradeAssetService: TradeAssetService) {\r\n  }\r\n\r\n  getStates(): void {\r\n    this.tradeAssetService\r\n      .getTradeAssets()\r\n      .subscribe(response => {\r\n        if (this.invalidate || response.length !== this.states.length) {\r\n          this.states = response;\r\n          this.invalidate = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getStates();\r\n    setInterval(() => this.getStates(), 2000);\r\n  }\r\n\r\n  openDialog(linearId: string) {\r\n    this.dialog.open(ChangeOwnerDialogComponent, {\r\n      width: '640px',\r\n      disableClose: true,\r\n      data: { linearId: linearId }\r\n    }).afterClosed().subscribe(() => {\r\n      this.invalidate = true;\r\n    });\r\n  }\r\n\r\n  getName(value: string): string {\r\n    return !!value ? X500Name.parse(value).organizationName : '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/app/supplier-dashboard/supplier-dashboard.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Repos/TradeIX/Concord/kotlin-source/src/main/resources/cordax/src/main.ts"],"sourceRoot":"webpack:///"}