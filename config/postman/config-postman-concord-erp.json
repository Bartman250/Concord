{
  "info": {
    "_postman_id": "6ae1c2e9-4cdd-4c68-96a3-804d3d84c454",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "name": "Concord-ERP",
    "description": "TradeIX Concord ERP REST API"
  },
  "item": [
    {
      "item": [
        {
          "response": [],
          "name": "nodes/all",
          "request": {
            "method": "GET",
            "description": "Gets all known X500 identities from the network map cache.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "nodes",
                "all"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "nodes/peers",
          "request": {
            "method": "GET",
            "description": "Gets all known X500 peer identities from the network map cache.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "nodes",
                "peers"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "nodes/local",
          "request": {
            "method": "GET",
            "description": "Gets the local node's X500 identity.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "nodes",
                "local"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "help/invoices/issue",
          "request": {
            "method": "GET",
            "description": "Gets the help documentation for the invoices/issue endpoint.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "help",
                "invoices",
                "issue"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "help/invoices/amend",
          "request": {
            "method": "GET",
            "description": "Gets the help documentation for the invoices/amend endpoint.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "help",
                "invoices",
                "amend"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "help/invoices/changeowner",
          "request": {
            "method": "GET",
            "description": "Gets the help documentation for the invoices/changeowner endpoint.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "help",
                "invoices",
                "changeowner"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "help/invoices/cancel",
          "request": {
            "method": "GET",
            "description": "Gets the help documentation for the invoices/cancel endpoint.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "help",
                "invoices",
                "cancel"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "help/fundingresponses/accept",
          "request": {
            "method": "GET",
            "description": "Gets the help documentation for the fundingresponses/accept endpoint.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "help",
                "fundingresponses",
                "accept"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "help/fundingresponses/reject",
          "request": {
            "method": "GET",
            "description": "Gets the help documentation for the fundingresponses/reject endpoint.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "help",
                "fundingresponses",
                "reject"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "invoices",
          "request": {
            "method": "GET",
            "description": "Performs a vault query for invoice states.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "invoices?externalId=INVOICE_001&status=all&pageNumber=1&pageSize=50"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "invoices/{externalId}",
          "request": {
            "method": "GET",
            "description": "Performs a vault query for the latest invoice state by externalId.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "invoices",
                "INVOICE_1"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "invoices/count",
          "request": {
            "method": "GET",
            "description": "Performs a vault query to count the total number of unconsumed invoice states.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "invoices",
                "count"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "invoices/hash",
          "request": {
            "method": "GET",
            "description": "Performs a vault query to get the last known invoice state hash.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "invoices",
                "hash"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "invoices/issue",
          "request": {
            "method": "POST",
            "description": "Issues a collection of invoice states to the network.",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "raw": "{\n  \"assets\": [\n    {\n      \"externalId\": \"INVOICE_1\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"1\",\n      \"reference\": \"REF_INVOICE_1\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_2\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"2\",\n      \"reference\": \"REF_INVOICE_2\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_3\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"3\",\n      \"reference\": \"REF_INVOICE_3\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_4\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"4\",\n      \"reference\": \"REF_INVOICE_4\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_5\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"5\",\n      \"reference\": \"REF_INVOICE_5\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_6\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"6\",\n      \"reference\": \"REF_INVOICE_6\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_7\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"7\",\n      \"reference\": \"REF_INVOICE_7\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_8\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"8\",\n      \"reference\": \"REF_INVOICE_8\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_9\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"9\",\n      \"reference\": \"REF_INVOICE_9\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_10\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"10\",\n      \"reference\": \"REF_INVOICE_10\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    }\n  ],\n  \"observers\": [\n    \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n  ],\n  \"attachments\": []\n}",
              "mode": "raw"
            },
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "invoices",
                "issue"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "invoices/amend",
          "request": {
            "method": "PUT",
            "description": "Amends a collection of invoice states on the network.",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "raw": "{\n  \"assets\": [\n    {\n      \"externalId\": \"INVOICE_1\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"1\",\n      \"reference\": \"REF_INVOICE_1_AMENDED\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_2\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"2\",\n      \"reference\": \"REF_INVOICE_2_AMENDED\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_3\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"3\",\n      \"reference\": \"REF_INVOICE_3_AMENDED\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_4\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"4\",\n      \"reference\": \"REF_INVOICE_4_AMENDED\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_5\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"5\",\n      \"reference\": \"REF_INVOICE_5_AMENDED\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_6\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"6\",\n      \"reference\": \"REF_INVOICE_6_AMENDED\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_7\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"7\",\n      \"reference\": \"REF_INVOICE_7_AMENDED\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_8\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"8\",\n      \"reference\": \"REF_INVOICE_8_AMENDED\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_9\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"9\",\n      \"reference\": \"REF_INVOICE_9_AMENDED\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    },\n    {\n      \"externalId\": \"INVOICE_10\",\n      \"buyer\": null,\n      \"supplier\": null,\n      \"invoiceNumber\": \"10\",\n      \"reference\": \"REF_INVOICE_10_AMENDED\",\n      \"dueDate\": \"2100-01-01T00:00\",\n      \"amount\": 123.45,\n      \"totalOutstanding\": 123.45,\n      \"settlementDate\": \"2100-01-01T00:00\",\n      \"invoiceDate\": \"2000-01-01T00:00\",\n      \"invoicePayments\": 0,\n      \"invoiceDilutions\": 0,\n      \"originationNetwork\": \"Mock Corda Network\",\n      \"currency\": \"GBP\",\n      \"siteId\": \"MOCK_CORDA_NETWORK\",\n      \"tradeDate\": \"2100-01-01T00:00\",\n      \"tradePaymentDate\": \"2100-02-02T00:00\",\n      \"buyerCompanyName\": \"Buyer 1\"\n    }\n  ],\n  \"observers\": [\n    \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n  ],\n  \"attachments\": []\n}",
              "mode": "raw"
            },
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "invoices",
                "amend"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "invoices/changeowner",
          "request": {
            "method": "PUT",
            "description": "Changes ownership of a collection of invoice states on the network.",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "raw": "{\n  \"assets\": [\n    {\n      \"externalId\": \"INVOICE_1\",\n      \"owner\": \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n    },\n    {\n      \"externalId\": \"INVOICE_2\",\n      \"owner\": \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n    },\n    {\n      \"externalId\": \"INVOICE_3\",\n      \"owner\": \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n    },\n    {\n      \"externalId\": \"INVOICE_4\",\n      \"owner\": \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n    },\n    {\n      \"externalId\": \"INVOICE_5\",\n      \"owner\": \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n    },\n    {\n      \"externalId\": \"INVOICE_6\",\n      \"owner\": \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n    },\n    {\n      \"externalId\": \"INVOICE_7\",\n      \"owner\": \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n    },\n    {\n      \"externalId\": \"INVOICE_8\",\n      \"owner\": \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n    },\n    {\n      \"externalId\": \"INVOICE_9\",\n      \"owner\": \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n    },\n    {\n      \"externalId\": \"INVOICE_10\",\n      \"owner\": \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n    }\n  ],\n  \"observers\": [],\n  \"attachments\": []\n}",
              "mode": "raw"
            },
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "invoices",
                "changeowner"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "invoices/cancel",
          "request": {
            "method": "DELETE",
            "description": "Changes ownership of a collection of invoice states on the network.",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "raw": "{\n  \"assets\": [\n    {\n      \"externalId\": \"INVOICE_1\"\n    },\n    {\n      \"externalId\": \"INVOICE_2\"\n    },\n    {\n      \"externalId\": \"INVOICE_3\"\n    },\n    {\n      \"externalId\": \"INVOICE_4\"\n    },\n    {\n      \"externalId\": \"INVOICE_5\"\n    },\n    {\n      \"externalId\": \"INVOICE_6\"\n    },\n    {\n      \"externalId\": \"INVOICE_7\"\n    },\n    {\n      \"externalId\": \"INVOICE_8\"\n    },\n    {\n      \"externalId\": \"INVOICE_9\"\n    },\n    {\n      \"externalId\": \"INVOICE_10\"\n    }\n  ],\n  \"observers\": [\n    \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\"\n  ],\n  \"attachments\": []\n}",
              "mode": "raw"
            },
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "invoices",
                "cancel"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "fundingresponses",
          "request": {
            "method": "GET",
            "description": "Performs a vault query for funding response states.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "fundingresponses?externalId=INVOICE_001&status=all&pageNumber=1&pageSize=50"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "fundingresponses/{externalId}",
          "request": {
            "method": "GET",
            "description": "Performs a vault query for the latest funding response state by externalId.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "fundingresponses",
                "FUNDING_RESPONSE_1"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "fundingresponses/count",
          "request": {
            "method": "GET",
            "description": "Performs a vault query to count the total number of unconsumed funding response states.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "fundingresponses",
                "count"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "fundingresponses/hash",
          "request": {
            "method": "GET",
            "description": "Performs a vault query to get the last known funding response state hash.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "fundingresponses",
                "hash"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "fundingresponses/accept",
          "request": {
            "method": "PUT",
            "description": "Accepts an existing funding response.",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "raw": "{\n  \"externalId\": \"FUNDING_RESPONSE_1\"\n}",
              "mode": "raw"
            },
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "fundingresponses",
                "accept"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "fundingresponses/reject",
          "request": {
            "method": "PUT",
            "description": "Rejects an existing funding response.",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "raw": "{\n  \"externalId\": \"FUNDING_RESPONSE_1\"\n}",
              "mode": "raw"
            },
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8086",
              "path": [
                "fundingresponses",
                "reject"
              ]
            }
          }
        }
      ],
      "name": "TradeIX Mock Supplier 1",
      "description": ""
    },
    {
      "item": [
        {
          "response": [],
          "name": "nodes/all",
          "request": {
            "method": "GET",
            "description": "Gets all known X500 identities from the network map cache.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8091",
              "path": [
                "nodes",
                "all"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "nodes/peers",
          "request": {
            "method": "GET",
            "description": "Gets all known X500 peer identities from the network map cache.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8091",
              "path": [
                "nodes",
                "peers"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "nodes/local",
          "request": {
            "method": "GET",
            "description": "Gets the local node's X500 identity.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8091",
              "path": [
                "nodes",
                "local"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "help/fundingresponses/issue",
          "request": {
            "method": "GET",
            "description": "Gets the help documentation for the fundingresponses/issue endpoint.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8091",
              "path": [
                "help",
                "fundingresponses",
                "issue"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "fundingresponses",
          "request": {
            "method": "GET",
            "description": "Performs a vault query for funding response states.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8091",
              "path": [
                "fundingresponses?externalId=INVOICE_001&status=all&pageNumber=1&pageSize=50"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "fundingresponses/{externalId}",
          "request": {
            "method": "GET",
            "description": "Performs a vault query for the latest funding response state by externalId.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8091",
              "path": [
                "fundingresponses",
                "FUNDING_RESPONSE_1"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "fundingresponses/count",
          "request": {
            "method": "GET",
            "description": "Performs a vault query to count the total number of unconsumed funding response states.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8091",
              "path": [
                "fundingresponses",
                "count"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "fundingresponses/hash",
          "request": {
            "method": "GET",
            "description": "Performs a vault query to get the last known funding response state hash.",
            "header": [],
            "body": null,
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8091",
              "path": [
                "fundingresponses",
                "hash"
              ]
            }
          }
        },
        {
          "response": [],
          "name": "fundingresponses/issue",
          "request": {
            "method": "POST",
            "description": "Creates a new funding response.",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "raw": "{\n  \"externalId\": \"FUNDING_RESPONSE_1\",\n  \"fundingRequestExternalId\": null,\n  \"invoiceExternalIds\": [\n    \"INVOICE_1\",\n    \"INVOICE_2\",\n    \"INVOICE_3\"\n  ],\n  \"supplier\": \"O=TradeIX Mock Supplier 1, L=London, C=GB\",\n  \"funder\": \"O=TradeIX Mock Funder 1, L=Madrid, C=ES\",\n  \"purchaseValue\": 1.00,\n  \"currency\": \"GBP\"\n}",
              "mode": "raw"
            },
            "url": {
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8091",
              "path": [
                "fundingresponses",
                "accept"
              ]
            }
          }
        }
      ],
      "name": "TradeIX Mock Funder 1",
      "description": ""
    }
  ],
  "name": "Concord-ERP",
  "description": "TradeIX Concord ERP REST API"
}